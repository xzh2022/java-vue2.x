{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport qs from 'qs';\nexport default {\n  name: \"Login\",\n  // 需要提交到后端的数据\n  data: function data() {\n    return {\n      loginForm: {\n        username: '3',\n        password: '3',\n        code: '',\n        token: ''\n      },\n      rules: {\n        username: [{\n          required: true,\n          message: '请输入用户名',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }],\n        code: [{\n          required: true,\n          message: '请输入验证码',\n          trigger: 'blur'\n        }, {\n          min: 5,\n          max: 5,\n          message: '长度 5 个字符',\n          trigger: 'blur'\n        }]\n      },\n      captchaImg: null\n    };\n  },\n  methods: {\n    submitForm: function submitForm(formName) {\n      var _this = this;\n\n      this.$refs[formName].validate(function (valid) {\n        if (valid) {\n          _this.$axios.post('/login?' + qs.stringify(_this.loginForm)).then(function (res) {\n            var jwt = res.headers['authorization'];\n\n            _this.$store.commit('SET_TOKEN', jwt); //跳转到 index 页面\n\n\n            _this.$router.push(\"/index\");\n          });\n        } else {\n          console.log('error submit!!');\n          return false;\n        }\n      });\n    },\n    resetForm: function resetForm(formName) {\n      this.$refs[formName].resetFields();\n    },\n    getCaptcha: function getCaptcha() {\n      var _this2 = this;\n\n      this.$axios.get('/captcha').then(function (res) {\n        console.log(\"/captcha\");\n        console.log(res);\n        _this2.loginForm.token = res.data.data.token;\n        _this2.captchaImg = res.data.data.captchaImg;\n        _this2.loginForm.code = '';\n      });\n    }\n  },\n  created: function created() {\n    this.getCaptcha();\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqCA;AAEA;EACAA,aADA;EAEA;EACAC,IAHA,kBAGA;IACA;MACAC;QACAC,aADA;QAEAC,aAFA;QAGAC,QAHA;QAIAC;MAJA,CADA;MAOAC;QACAJ,WACA;UAAAK;UAAAC;UAAAC;QAAA,CADA,CADA;QAIAN,WACA;UAAAI;UAAAC;UAAAC;QAAA,CADA,CAJA;QAOAL,OACA;UAAAG;UAAAC;UAAAC;QAAA,CADA,EAEA;UAAAC;UAAAC;UAAAH;UAAAC;QAAA,CAFA;MAPA,CAPA;MAmBAG;IAnBA;EAqBA,CAzBA;EA0BAC;IACAC,UADA,sBACAC,QADA,EACA;MAAA;;MACA;QACA;UACA;YAEA;;YAEA,sCAJA,CAKA;;;YACA;UACA,CAPA;QAQA,CATA,MASA;UACAC;UACA;QACA;MACA,CAdA;IAeA,CAjBA;IAkBAC,SAlBA,qBAkBAF,QAlBA,EAkBA;MACA;IACA,CApBA;IAqBAG,UArBA,wBAqBA;MAAA;;MACA;QAEAF;QACAA;QAEA;QACA;QACA;MACA,CARA;IASA;EA/BA,CA1BA;EA4DAG,OA5DA,qBA4DA;IACA;EACA;AA9DA","names":["name","data","loginForm","username","password","code","token","rules","required","message","trigger","min","max","captchaImg","methods","submitForm","formName","console","resetForm","getCaptcha","created"],"sourceRoot":"src/views","sources":["Login.vue"],"sourcesContent":["<template>\r\n  <el-row type=\"flex\" class=\"row-bg\" justify=\"center\">\r\n    <el-col :xl=\"6\" :lg=\"7\">\r\n        <h2>欢迎来到demoVue管理系统</h2>\r\n        <el-image :src=\"require('@/assets/xzh.jpg')\" style=\"height: 180px; width: 180px;\"></el-image>\r\n        <p>微信：xzh</p>\r\n        <p>期望您有个愉快的使用体验</p>\r\n    </el-col>\r\n\r\n    <el-col :span=\"1\">\r\n      <el-divider direction=\"vertical\"></el-divider>\r\n    </el-col>\r\n\r\n    <el-col :xl=\"6\" :lg=\"7\">\r\n        <el-form :model=\"loginForm\" :rules=\"rules\" ref=\"loginForm\" label-width=\"100px\">\r\n          <el-form-item label=\"用户名\" prop=\"username\" style=\"width: 380px;\">\r\n            <el-input v-model=\"loginForm.username\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"密码\" prop=\"password\" style=\"width: 380px;\">\r\n            <el-input v-model=\"loginForm.password\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"验证码\" prop=\"code\" style=\"width: 380px;\">\r\n            <el-input v-model=\"loginForm.code\" style=\"width: 172px; float: left\"></el-input>\r\n            <el-image :src=\"captchaImg\" class=\"captchaImg\" @click=\"getCaptcha\"></el-image>\r\n          </el-form-item>\r\n\r\n          <el-form-item>\r\n            <el-button type=\"primary\" @click=\"submitForm('loginForm')\">立即创建</el-button>\r\n            <el-button @click=\"resetForm('loginForm')\" icon=\"el-icon-refresh-right\">重置</el-button>\r\n          </el-form-item>\r\n        </el-form>\r\n    </el-col>\r\n  </el-row>\r\n</template>\r\n\r\n<script>\r\n\r\nimport qs from 'qs'\r\n\r\nexport default {\r\n  name: \"Login\",\r\n  // 需要提交到后端的数据\r\n  data() {\r\n    return {\r\n      loginForm: {\r\n        username: '3',\r\n        password: '3',\r\n        code: '',\r\n        token:''\r\n      },\r\n      rules: {\r\n        username: [\r\n          { required: true, message: '请输入用户名', trigger: 'blur' }\r\n        ],\r\n        password: [\r\n          { required: true, message: '请输入密码', trigger: 'blur' }\r\n        ],\r\n        code: [\r\n          { required: true, message: '请输入验证码', trigger: 'blur' },\r\n          { min: 5, max: 5, message: '长度 5 个字符', trigger: 'blur' }\r\n        ]\r\n      },\r\n      captchaImg: null\r\n    };\r\n  },\r\n  methods: {\r\n    submitForm(formName) {\r\n      this.$refs[formName].validate((valid) => {\r\n        if (valid) {\r\n          this.$axios.post('/login?' + qs.stringify(this.loginForm)).then(res => {\r\n\r\n            const jwt = res.headers['authorization']\r\n\r\n            this.$store.commit('SET_TOKEN', jwt)\r\n            //跳转到 index 页面\r\n            this.$router.push(\"/index\")\r\n          })\r\n        } else {\r\n          console.log('error submit!!');\r\n          return false;\r\n        }\r\n      });\r\n    },\r\n    resetForm(formName) {\r\n      this.$refs[formName].resetFields();\r\n    },\r\n    getCaptcha(){\r\n      this.$axios.get('/captcha').then(res => {\r\n\r\n        console.log(\"/captcha\")\r\n        console.log(res)\r\n\r\n        this.loginForm.token = res.data.data.token\r\n        this.captchaImg = res.data.data.captchaImg\r\n        this.loginForm.code = ''\r\n      })\r\n    }\r\n\r\n  },\r\n  created(){\r\n    this.getCaptcha()\r\n  }\r\n}\r\n\r\n</script>\r\n\r\n<style scoped>\r\n\r\n.el-row{\r\n  background-color: #fafafa;\r\n  height: 100vh;\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n.el-divider{\r\n  height: 200px;\r\n}\r\n.captchaImg{\r\n  float: left;\r\n  margin-left: 8px;\r\n  border-radius: 2px;\r\n\r\n}\r\n\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}