{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: \"UserCenter\",\n  data: function data() {\n    var _this2 = this;\n\n    var validatePass = function validatePass(rule, value, callback) {\n      if (value === '') {\n        callback(new Error('请再次输入密码'));\n      } else if (value !== _this2.passForm.pass) {\n        callback(new Error('两次输入密码不一致!'));\n      } else {\n        callback();\n      }\n    };\n\n    return {\n      userinfo: {},\n      passForm: {\n        currentPass: '',\n        password: '',\n        checkPass: ''\n      },\n      rules: {\n        currentPass: [{\n          required: true,\n          message: '请输入当前密码',\n          trigger: 'blur'\n        }, {\n          min: 6,\n          max: 12,\n          message: '长度在 6 到 12 个字符',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请输入新密码',\n          trigger: 'blur'\n        }],\n        checkPass: [{\n          required: true,\n          validator: validatePass,\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  created: function created() {\n    this.getUserInfo();\n  },\n  methods: {\n    getUserInfo: function getUserInfo() {\n      var _this3 = this;\n\n      this.$axios.get(\"/sys/userInfo\").then(function (res) {\n        _this3.userinfo = res.data.data;\n      });\n    },\n    submitForm: function submitForm(formName) {\n      var _this4 = this;\n\n      this.$refs[formName].validate(function (valid) {\n        if (valid) {\n          // alert('submit!');\n          var _this = _this4;\n\n          _this4.$axios.post('/sys/user/updatePass', _this4.passForm).then(function (res) {\n            _this.$alert(res.data.msg, '提示', {\n              confirmButtonText: '确定',\n              callback: function callback(action) {\n                _this4.$refs[formName].resetFields();\n              }\n            });\n          });\n        } else {\n          console.log('error submit!!');\n          return false;\n        }\n      });\n    },\n    resetForm: function resetForm(formName) {\n      this.$refs[formName].resetFields();\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;AAsBA;EACAA,kBADA;EAEAC,IAFA,kBAEA;IAAA;;IAEA;MACA;QACAC;MACA,CAFA,MAEA;QACAA;MACA,CAFA,MAEA;QACAA;MACA;IACA,CARA;;IASA;MACAC,YADA;MAIAC;QACAC,eADA;QAEAC,YAFA;QAGAC;MAHA,CAJA;MASAC;QACAH,cACA;UAAAI;UAAAC;UAAAC;QAAA,CADA,EAEA;UAAAC;UAAAC;UAAAH;UAAAC;QAAA,CAFA,CADA;QAKAL,WACA;UAAAG;UAAAC;UAAAC;QAAA,CADA,CALA;QAQAJ,YACA;UAAAE;UAAAK;UAAAH;QAAA,CADA;MARA;IATA;EAsBA,CAnCA;EAoCAI,OApCA,qBAoCA;IACA;EACA,CAtCA;EAuCAC;IACAC,WADA,yBACA;MAAA;;MACA;QAEA;MACA,CAHA;IAIA,CANA;IAOAC,UAPA,sBAOAC,QAPA,EAOA;MAAA;;MACA;QACA;UACA;UACA;;UACA;YAEAC;cACAC,uBADA;cAEAnB;gBACA;cACA;YAJA;UAMA,CARA;QASA,CAZA,MAYA;UACAoB;UACA;QACA;MACA,CAjBA;IAkBA,CA1BA;IA2BAC,SA3BA,qBA2BAJ,QA3BA,EA2BA;MACA;IACA;EA7BA;AAvCA","names":["name","data","callback","userinfo","passForm","currentPass","password","checkPass","rules","required","message","trigger","min","max","validator","created","methods","getUserInfo","submitForm","formName","_this","confirmButtonText","console","resetForm"],"sourceRoot":"src/views","sources":["UserCenter.vue"],"sourcesContent":["<template>\r\n  <div style=\"text-align: center;\">\r\n      <h2>你好！{{userinfo.username}} 同学</h2>\r\n      <el-form :model=\"passForm\" status-icon :rules=\"rules\" ref=\"passForm\" label-width=\"100px\">\r\n        <el-form-item label=\"旧密码\" prop=\"currentPass\">\r\n          <el-input type=\"password\" v-model=\"passForm.currentPass\" autocomplete=\"off\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"新密码\" prop=\"password\">\r\n          <el-input type=\"password\" v-model=\"passForm.password\" autocomplete=\"off\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"确认密码\" prop=\"checkPass\">\r\n          <el-input type=\"password\" v-model=\"passForm.checkPass\" autocomplete=\"off\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button type=\"primary\" @click=\"submitForm('passForm')\">提交</el-button>\r\n          <el-button @click=\"resetForm('passForm')\">重置</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n      name: \"UserCenter\",\r\n      data() {\r\n\r\n        var validatePass = (rule, value, callback) => {\r\n          if (value === '') {\r\n            callback(new Error('请再次输入密码'));\r\n          } else if (value !== this.passForm.pass) {\r\n            callback(new Error('两次输入密码不一致!'));\r\n          } else {\r\n            callback();\r\n          }\r\n        };\r\n        return {\r\n          userinfo: {\r\n\r\n          },\r\n          passForm: {\r\n            currentPass: '',\r\n            password: '',\r\n            checkPass: ''\r\n          },\r\n          rules: {\r\n            currentPass: [\r\n              { required: true, message: '请输入当前密码', trigger: 'blur' },\r\n              { min: 6, max: 12, message: '长度在 6 到 12 个字符', trigger: 'blur'}\r\n            ],\r\n            password: [\r\n              { required: true, message: '请输入新密码', trigger: 'blur' }\r\n            ],\r\n            checkPass: [\r\n              { required: true, validator: validatePass, trigger: 'blur' }\r\n            ]\r\n          }\r\n        };\r\n      },\r\n      created() {\r\n        this.getUserInfo()\r\n      },\r\n      methods: {\r\n        getUserInfo() {\r\n          this.$axios.get(\"/sys/userInfo\").then(res => {\r\n\r\n            this.userinfo = res.data.data;\r\n          })\r\n        },\r\n        submitForm(formName) {\r\n          this.$refs[formName].validate((valid) => {\r\n            if (valid) {\r\n              // alert('submit!');\r\n              const _this = this\r\n              this.$axios.post('/sys/user/updatePass', this.passForm).then(res => {\r\n\r\n                _this.$alert(res.data.msg, '提示', {\r\n                    confirmButtonText: '确定',\r\n                    callback: action => {\r\n                        this.$refs[formName].resetFields();\r\n                    }\r\n                })\r\n              })\r\n            } else {\r\n              console.log('error submit!!');\r\n              return false;\r\n            }\r\n          });\r\n        },\r\n        resetForm(formName) {\r\n          this.$refs[formName].resetFields();\r\n        }\r\n      }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n    .el-form {\r\n      width: 420px;\r\n      height: 50px;\r\n\r\n    }\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}