{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: \"UserCenter\",\n  data: function data() {\n    var _this = this;\n\n    var validatePass = function validatePass(rule, value, callback) {\n      if (value === '') {\n        callback(new Error('请输入密码'));\n      } else {\n        if (_this.passForm.checkPass !== '') {\n          _this.$refs.passForm.validateField('checkPass');\n        }\n\n        callback();\n      }\n    };\n\n    var validatePass2 = function validatePass2(rule, value, callback) {\n      if (value === '') {\n        callback(new Error('请再次输入密码'));\n      } else if (value !== _this.passForm.pass) {\n        callback(new Error('两次输入密码不一致!'));\n      } else {\n        callback();\n      }\n    };\n\n    return {\n      passForm: {\n        currentPass: '',\n        password: '',\n        checkPass: ''\n      },\n      rules: {\n        pass: [{\n          validator: validatePass,\n          trigger: 'blur'\n        }],\n        checkPass: [{\n          validator: validatePass2,\n          trigger: 'blur'\n        }],\n        age: [{\n          validator: checkAge,\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  methods: {\n    submitForm: function submitForm(formName) {\n      this.$refs[formName].validate(function (valid) {\n        if (valid) {\n          alert('submit!');\n        } else {\n          console.log('error submit!!');\n          return false;\n        }\n      });\n    },\n    resetForm: function resetForm(formName) {\n      this.$refs[formName].resetFields();\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;AAmBA;EACAA,kBADA;EAEAC,IAFA,kBAEA;IAAA;;IAEA;MACA;QACAC;MACA,CAFA,MAEA;QACA;UACA;QACA;;QACAA;MACA;IACA,CATA;;IAUA;MACA;QACAA;MACA,CAFA,MAEA;QACAA;MACA,CAFA,MAEA;QACAA;MACA;IACA,CARA;;IASA;MACAC;QACAC,eADA;QAEAC,YAFA;QAGAC;MAHA,CADA;MAMAC;QACAC,OACA;UAAAC;UAAAC;QAAA,CADA,CADA;QAIAJ,YACA;UAAAG;UAAAC;QAAA,CADA,CAJA;QAOAC,MACA;UAAAF;UAAAC;QAAA,CADA;MAPA;IANA;EAkBA,CAzCA;EA0CAE;IACAC,UADA,sBACAC,QADA,EACA;MACA;QACA;UACAC;QACA,CAFA,MAEA;UACAC;UACA;QACA;MACA,CAPA;IAQA,CAVA;IAWAC,SAXA,qBAWAH,QAXA,EAWA;MACA;IACA;EAbA;AA1CA","names":["name","data","callback","passForm","currentPass","password","checkPass","rules","pass","validator","trigger","age","methods","submitForm","formName","alert","console","resetForm"],"sourceRoot":"src/views","sources":["UserCenter.vue"],"sourcesContent":["<template>\r\n  <el-form :model=\"passForm\" status-icon :rules=\"rules\" ref=\"passForm\" label-width=\"100px\">\r\n    <el-form-item label=\"旧密码\" prop=\"currentPass\">\r\n      <el-input type=\"password\" v-model=\"passForm.currentPass\" autocomplete=\"off\"></el-input>\r\n    </el-form-item>\r\n    <el-form-item label=\"新密码\" prop=\"password\">\r\n      <el-input type=\"password\" v-model=\"passForm.password\" autocomplete=\"off\"></el-input>\r\n    </el-form-item>\r\n    <el-form-item label=\"确认密码\" prop=\"checkPass\">\r\n      <el-input type=\"password\" v-model=\"passForm.checkPass\" autocomplete=\"off\"></el-input>\r\n    </el-form-item>\r\n    <el-form-item>\r\n      <el-button type=\"primary\" @click=\"submitForm('passForm')\">提交</el-button>\r\n      <el-button @click=\"resetForm('passForm')\">重置</el-button>\r\n    </el-form-item>\r\n  </el-form>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"UserCenter\",\r\n  data() {\r\n\r\n    var validatePass = (rule, value, callback) => {\r\n      if (value === '') {\r\n        callback(new Error('请输入密码'));\r\n      } else {\r\n        if (this.passForm.checkPass !== '') {\r\n          this.$refs.passForm.validateField('checkPass');\r\n        }\r\n        callback();\r\n      }\r\n    };\r\n    var validatePass2 = (rule, value, callback) => {\r\n      if (value === '') {\r\n        callback(new Error('请再次输入密码'));\r\n      } else if (value !== this.passForm.pass) {\r\n        callback(new Error('两次输入密码不一致!'));\r\n      } else {\r\n        callback();\r\n      }\r\n    };\r\n    return {\r\n      passForm: {\r\n        currentPass: '',\r\n        password: '',\r\n        checkPass: ''\r\n      },\r\n      rules: {\r\n        pass: [\r\n          { validator: validatePass, trigger: 'blur' }\r\n        ],\r\n        checkPass: [\r\n          { validator: validatePass2, trigger: 'blur' }\r\n        ],\r\n        age: [\r\n          { validator: checkAge, trigger: 'blur' }\r\n        ]\r\n      }\r\n    };\r\n  },\r\n  methods: {\r\n    submitForm(formName) {\r\n      this.$refs[formName].validate((valid) => {\r\n        if (valid) {\r\n          alert('submit!');\r\n        } else {\r\n          console.log('error submit!!');\r\n          return false;\r\n        }\r\n      });\r\n    },\r\n    resetForm(formName) {\r\n      this.$refs[formName].resetFields();\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}